plugins {
    id 'com.github.ben-manes.versions' version '0.19.0'
    id 'io.spring.dependency-management' version '1.0.5.RELEASE'
    id 'org.sonarqube' version '2.6.2'
    id 'org.springframework.boot' version '2.0.3.RELEASE'
    id 'idea'
    id 'java'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def major = '1'
def minor = '0'
def patch = System.env.BUILD_NUMBER ?: '0'
def artifact_version = major + '.' + minor + '.' + patch
version = artifact_version

bootJar {
    launchScript()
}

ext {
    springBootVersion = '2.0.3.RELEASE'
    springKafkaVersion = '2.1.7.RELEASE'
    springFoxVersion = '2.9.0'
}

repositories {
    jcenter()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-sleuth:2.0.0.RC2'
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.RC2'
    }
}

dependencies {
    compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
    compile("io.springfox:springfox-data-rest:${springFoxVersion}")
    compile("io.springfox:springfox-swagger-ui:${springFoxVersion}")
    compile("io.springfox:springfox-swagger2:${springFoxVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-hateoas:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
    compile("org.springframework.cloud:spring-cloud-starter-sleuth:2.0.0.RC2")
    compile("org.springframework.kafka:spring-kafka:${springKafkaVersion}")
    compileOnly("org.projectlombok:lombok:1.18.0")
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("org.springframework.kafka:spring-kafka-test:${springKafkaVersion}")
}